#!/usr/bin/env bash

me=scrape
function usage(){
   echo "usage $me command"
   echo "    $me --help for help"
   exit 2
}

if [ $# -lt 1 ];  then
     usage
fi

ORIGINAL=( "$@" )
export DRY=

POSITIONAL=()
while [[ $# -gt 0 ]]
do
    key="$1"
    case $key in
       --debug)            export DEBUG="true"; shift;;
       --debugOff)         export DEBUG=""; shift;;
       -l|--log)           export LOG_FILE="$2"; shift;shift;;
       --logPrefix)        export LOG_PREFIX="$2"; shift;shift;;
       -d|--dry)           export DRY="--dry"; shift;;
       --iam)              export WHOAMI="$2"; shift;shift;;
       *)                  POSITIONAL+=( "$1" ); shift;;
    esac
done

if [ "$LOG_INDENT" = "" ]; then export LOG_INDENT="   "; fi

log.sh "$me ${ORIGINAL[*]}"


OLD=$IFS
IFS='`'
set -- ${POSITIONAL[@]}
IFS=$OLD

function checkFor(){
   
   check=$1           # this will be looked for as a command and if the exit code is zero then it will be executed with params 3 onwards passed to it
   exitcodeiffound=$2 #if set, when found adz will execute with this exit code
   shiftwhenfound=$3
   shift 3
   command -v $check > /dev/null
   #echo "here$1now"
   if [ "$?" = "0" ] ; then
      #echo "Here"
      shift "$shiftwhenfound"
      $check "$@"
      exitcode=$?
      if [ "$exitcode" != "0" ]; then exit $exitcode; fi
      exit $exitcodeiffound
   fi
}

COMMAND=$1
export ORIGINAL_COMMAND=${ORIGINAL_COMMAND-"$COMMAND"}

shift

checkFor "$me-$COMMAND.sh" "0" "0"  "$@"
#$DIR_SOURCE | createJob.sh


echo "Cannot process $COMMAND"




